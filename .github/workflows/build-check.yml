name: Build Check
on:
  workflow_dispatch:
    inputs:
      IGNORE_CHECK:
        type: string
        required: true
        default: 'true'

jobs:
  check:
    name: Build Check
    runs-on: ubuntu-latest

    outputs:
      ksu: ${{ steps.ksu.outputs.ksu_update }}
      KERNELSU_LATEST_TAG: ${{ steps.ksu.outputs.KERNELSU_LATEST_TAG }}
      pdx203_boot: ${{ steps.pdx203_boot.outputs.boot_update }}
      PDX203_SOURCE_BOOT_IMAGE: ${{ steps.pdx203_boot.outputs.SOURCE_BOOT_IMAGE }}
      pdx206_boot: ${{ steps.pdx206_boot.outputs.boot_update }}
      PDX206_SOURCE_BOOT_IMAGE: ${{ steps.pdx206_boot.outputs.SOURCE_BOOT_IMAGE }}

    steps:
    - uses: actions/checkout@v4
    - name: Prepare Configuration
      run: |
        echo "KERNELSU_LATEST_TAG=$(cat variables.env | grep -w "KERNELSU_LATEST_TAG" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "PDX203_SOURCE_BOOT_IMAGE=$(cat variables.env | grep -w "PDX203_SOURCE_BOOT_IMAGE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "PDX206_SOURCE_BOOT_IMAGE=$(cat variables.env | grep -w "PDX206_SOURCE_BOOT_IMAGE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install curl jq

    - name: Check KernelSU
      id: ksu
      run: |
        tag="v0.9.5"
        echo "KERNELSU_LATEST_TAG=$tag" >> $GITHUB_OUTPUT
        if [ "$tag" != "${{ env.KERNELSU_LATEST_TAG }}" ]; then
          echo "ksu_update=true" >> $GITHUB_OUTPUT
        fi

    - name: Check PDX203
      id: pdx203_boot
      run: |
        pdx203_boot=$(curl 'https://download.lineageos.org/api/v2/devices/pdx203/builds' | jq -r '.[0].files[] | select(.filename == "boot.img") | .url')
        echo "SOURCE_BOOT_IMAGE=$pdx203_boot" >> $GITHUB_OUTPUT
        if [ "$pdx203_boot" != "${{ env.PDX203_SOURCE_BOOT_IMAGE }}" ]; then
          echo "boot_update=true" >> $GITHUB_OUTPUT
        fi

    - name: Check PDX206
      id: pdx206_boot
      run: |
        pdx206_boot=$(curl 'https://download.lineageos.org/api/v2/devices/pdx206/builds' | jq -r '.[0].files[] | select(.filename == "boot.img") | .url')
        echo "SOURCE_BOOT_IMAGE=$pdx206_boot" >> $GITHUB_OUTPUT
        if [ "$pdx206_boot" != "${{ env.PDX206_SOURCE_BOOT_IMAGE }}" ]; then
          echo "boot_update=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit variables
      if: steps.ksu.outputs.ksu_update == 'true' || steps.pdx203_boot.outputs.boot_update == 'true' || steps.pdx206_boot.outputs.boot_update == 'true'
      run: |
        echo "KERNELSU_LATEST_TAG=${{ steps.ksu.outputs.KERNELSU_LATEST_TAG }}" > variables.env
        echo "PDX203_SOURCE_BOOT_IMAGE=${{ steps.pdx203_boot.outputs.SOURCE_BOOT_IMAGE }}" >> variables.env
        echo "PDX206_SOURCE_BOOT_IMAGE=${{ steps.pdx206_boot.outputs.SOURCE_BOOT_IMAGE }}" >> variables.env
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add variables.env
        git diff-index --cached --quiet HEAD -- || (git commit -m "variables" && git push)

  build_kernel_pdx203:
    name: Build PDX203
    needs: check
    if: inputs.IGNORE_CHECK == 'true' || needs.check.outputs.ksu == 'true' || needs.check.outputs.pdx203_boot == 'true'
    uses: ./.github/workflows/build-kernel_sm8250.yml
    with:
      KERNEL_CONFIG: "pdx203_defconfig"
      KERNELSU_TAG: ${{ needs.check.outputs.KERNELSU_LATEST_TAG }}
      SOURCE_BOOT_IMAGE: ${{ needs.check.outputs.PDX203_SOURCE_BOOT_IMAGE }}

  build_kernel_pdx206:
    name: Build PDX206
    needs: check
    if: inputs.IGNORE_CHECK == 'true' || needs.check.outputs.ksu == 'true' || needs.check.outputs.pdx206_boot == 'true'
    uses: ./.github/workflows/build-kernel_sm8250.yml
    with:
      KERNEL_CONFIG: "pdx206_defconfig"
      KERNELSU_TAG: ${{ needs.check.outputs.KERNELSU_LATEST_TAG }}
      SOURCE_BOOT_IMAGE: ${{ needs.check.outputs.PDX206_SOURCE_BOOT_IMAGE }}
